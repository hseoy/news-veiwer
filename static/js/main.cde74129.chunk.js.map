{"version":3,"sources":["components/Countries/index.jsx","components/Categories/index.jsx","components/NewsItem/index.jsx","lib/usePromise.js","components/NewsList/index.jsx","pages/NewsPage/index.jsx","App.jsx","i18n.js","index.js"],"names":["countries","CountriesBlock","styled","div","Country","props","active","css","Countries","country","onSelect","i18n","useTranslation","map","c","onClick","changeLanguage","toUpperCase","categories","CategoriesBlock","Category","NavLink","Categories","t","activeClassName","exact","to","NewsItemBlock","NewsItem","article","title","description","url","urlToImage","className","href","target","rel","src","alt","defaultProps","usePromise","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","promiseResolved","process","NewsListBlock","NewsList","category","query","axios","get","response","articles","data","length","NewsPage","match","setCountry","useCallback","selectedCountry","params","App","path","component","use","initReactI18next","init","resources","en","translation","all","business","entertainment","health","science","sports","technology","ko","lng","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"iSAKMA,EAAY,CAAC,KAAM,MAEnBC,EAAiBC,IAAOC,IAAV,8LAYdC,EAAUF,IAAOC,IAAV,kQAgBT,SAAAE,GAAK,OACLA,EAAMC,QACNC,YADA,+KAyCWC,EA9BG,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACpBC,EAASC,cAATD,KAER,OACE,cAACV,EAAD,UACGD,EAAUa,KAAI,SAAAC,GAAC,OACd,cAACV,EAAD,CAEEE,OAAQG,IAAYK,EACpBC,QAAS,WACG,OAAND,EACFH,EAAKK,eAAe,MAEpBL,EAAKK,eAAe,MAEtBN,EAASI,IATb,SAYGA,EAAEG,eAXEH,SCjDTI,EAAa,CACjB,MACA,WACA,gBACA,SACA,UACA,SACA,cAGIC,EAAkBjB,IAAOC,IAAV,8LAYfiB,EAAWlB,YAAOmB,IAAPnB,CAAH,8YA6CCoB,EAnBI,WAAO,IAChBC,EAAMX,cAANW,EAER,OACE,cAACJ,EAAD,UACGD,EAAWL,KAAI,SAAAC,GAAC,OACf,cAACM,EAAD,CAEEI,gBAAgB,SAChBC,MAAa,QAANX,EACPY,GAAU,QAANZ,EAAc,IAAd,WAAwBA,GAJ9B,SAMGS,EAAET,IALEA,SCxDTa,EAAgBzB,IAAOC,IAAV,+cAmCbyB,EAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACVC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,IAAKC,EAAeJ,EAAfI,WAEjC,OACE,eAACN,EAAD,WACGM,GACC,qBAAKC,UAAU,YAAf,SACE,mBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,SACE,qBAAKC,IAAKL,EAAYM,IAAI,kBAIhC,sBAAKL,UAAU,WAAf,UACE,6BACE,mBAAGC,KAAMH,EAAKI,OAAO,SAASC,IAAI,sBAAlC,SACGP,MAGL,4BAAIC,WAeZH,EAASY,aAAe,CACtBX,QAAS,MAGID,I,EAAAA,I,0CCpDAa,EAtBI,SAACC,EAAgBC,GAAU,IAAD,EACbC,oBAAS,GADI,mBACpCC,EADoC,KAC3BC,EAD2B,OAEXF,mBAAS,MAFE,mBAEpCG,EAFoC,KAE1BC,EAF0B,OAGjBJ,mBAAS,MAHQ,mBAGpCK,EAHoC,KAG7BC,EAH6B,KAmB3C,OAdAC,qBAAU,YACK,uCAAG,4BAAAC,EAAA,6DACdN,GAAW,GADG,kBAGkBJ,IAHlB,OAGNW,EAHM,OAIZL,EAAYK,GAJA,gDAMZH,EAAS,EAAD,IANI,QAQdJ,GAAW,GARG,yDAAH,qDAUbQ,KACCX,GAEI,CAACE,EAASE,EAAUE,ICdvBM,EAAgBrD,IAAOC,IAAV,+PAcbqD,EAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUhD,EAAc,EAAdA,QAAc,EACPgC,GAAW,WAC5C,IAAMiB,EAAqB,QAAbD,EAAqB,GAArB,oBAAuCA,GACrD,OAAOE,IAAMC,IAAN,4DACgDnD,GADhD,OAC0DiD,MAEhE,CAACD,EAAUhD,IAN4B,mBACnCoC,EADmC,KAC1BgB,EAD0B,KAChBZ,EADgB,KAQ1C,GAAIJ,EACF,OAAO,cAACU,EAAD,0BAGT,IAAKM,EACH,OAAO,KAGT,GAAIZ,EACF,OAAO,cAACM,EAAD,qBAjBiC,IAoBlCO,EAAaD,EAASE,KAAtBD,SAER,OAAwB,IAApBA,EAASE,OACJ,cAACT,EAAD,mCAIP,cAACA,EAAD,UACGO,EAASjD,KAAI,SAAAgB,GAAO,OACnB,cAAC,EAAD,CAA4BA,QAASA,GAAtBA,EAAQG,WAW/BwB,EAAShB,aAAe,CACtBiB,SAAU,OAGGD,QC3DTS,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACAtB,mBAAS,MADT,mBACvBnC,EADuB,KACd0D,EADc,KAExBzD,EAAW0D,uBACf,SAAAC,GAAe,OAAIF,EAAWE,KAC9B,IAEIZ,EAAWS,EAAMI,OAAOb,UAAY,MAE1C,OACE,qCACE,cAAC,EAAD,CAAWhD,QAASA,EAASC,SAAUA,IACvC,cAAC,EAAD,IACA,cAAC,EAAD,CAAU+C,SAAUA,EAAUhD,QAASA,QAS7CwD,EAASzB,aAAe,CACtB0B,MAAO,MAGMD,QCvBAM,EAJH,WACV,OAAO,cAAC,IAAD,CAAOC,KAAK,cAAcC,UAAWR,K,wBCyB9CtD,IAAK+D,IAAIC,KAAkBC,KAAK,CAC9BC,UA5BgB,CAChBC,GAAI,CAEFC,YAAa,CACXC,IAAK,MACLC,SAAU,WACVC,cAAe,gBACfC,OAAQ,SACRC,QAAS,UACTC,OAAQ,SACRC,WAAY,SAGhBC,GAAI,CAEFR,YAAa,CACXC,IAAK,eACLC,SAAU,2BACVC,cAAe,uCACfC,OAAQ,eACRC,QAAS,eACTC,OAAQ,qBACRC,WAAY,kBAOhBE,IAAK,OAGQ7E,EAAf,EC1BA8E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAeC,SAAUtC,eAAzB,SACE,cAAC,EAAD,QAGJuC,SAASC,eAAe,W","file":"static/js/main.cde74129.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { useTranslation } from 'react-i18next';\n\nconst countries = ['kr', 'us'];\n\nconst CountriesBlock = styled.div`\n  display: flex;\n  padding: 1rem;\n  width: 768px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    overflow-x: auto;\n  }\n`;\n\nconst Country = styled.div`\n  font-size: 1.125rem;\n  cursor: pointer;\n  white-space: pre;\n  text-decoration: none;\n  color: inherit;\n  padding-bottom: 0.25rem;\n\n  &:hover {\n    color: #495057;\n  }\n\n  & + & {\n    margin-left: 1rem;\n  }\n\n  ${props =>\n    props.active &&\n    css`\n      font-weight: 600;\n      border-bottom: 2px solid #22b8cf;\n      color: #22b8cf;\n      &:hover {\n        color: #3bc9db;\n      }\n    `}\n`;\n\nconst Countries = ({ country, onSelect }) => {\n  const { i18n } = useTranslation();\n\n  return (\n    <CountriesBlock>\n      {countries.map(c => (\n        <Country\n          key={c}\n          active={country === c}\n          onClick={() => {\n            if (c === 'kr') {\n              i18n.changeLanguage('ko');\n            } else {\n              i18n.changeLanguage('en');\n            }\n            onSelect(c);\n          }}\n        >\n          {c.toUpperCase()}\n        </Country>\n      ))}\n    </CountriesBlock>\n  );\n};\n\nCountries.propTypes = {\n  country: PropTypes.string.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nexport default Countries;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nconst categories = [\n  'all',\n  'business',\n  'entertainment',\n  'health',\n  'science',\n  'sports',\n  'technology',\n];\n\nconst CategoriesBlock = styled.div`\n  display: flex;\n  padding: 1rem;\n  width: 768px;\n  margin: 0 auto;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    overflow-x: auto;\n  }\n`;\n\nconst Category = styled(NavLink)`\n  font-size: 1.125rem;\n  cursor: pointer;\n  white-space: pre;\n  text-decoration: none;\n  color: inherit;\n  padding-bottom: 0.25rem;\n\n  &:hover {\n    color: #495057;\n  }\n\n  & + & {\n    margin-left: 1rem;\n  }\n\n  &.active {\n    font-weight: 600;\n    border-bottom: 2px solid #22b8cf;\n    color: #22b8cf;\n    &:hover {\n      color: #3bc9db;\n    }\n  }\n`;\n\nconst Categories = () => {\n  const { t } = useTranslation();\n\n  return (\n    <CategoriesBlock>\n      {categories.map(c => (\n        <Category\n          key={c}\n          activeClassName=\"active\"\n          exact={c === 'all'}\n          to={c === 'all' ? '/' : `/${c}`}\n        >\n          {t(c)}\n        </Category>\n      ))}\n    </CategoriesBlock>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst NewsItemBlock = styled.div`\n  display: flex;\n\n  .thumbnail {\n    margin-right: 1rem;\n\n    img {\n      display: block;\n      width: 160px;\n      height: 100px;\n      object-fit: cover;\n    }\n  }\n\n  .contents {\n    h2 {\n      margin: 0;\n\n      a {\n        color: black;\n      }\n    }\n\n    p {\n      margin: 0;\n      line-height: 1.5;\n      margin-top: 0.5rem;\n      white-space: normal;\n    }\n  }\n  & + & {\n    margin-top: 3rem;\n  }\n`;\n\nconst NewsItem = ({ article }) => {\n  const { title, description, url, urlToImage } = article;\n\n  return (\n    <NewsItemBlock>\n      {urlToImage && (\n        <div className=\"thumbnail\">\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={urlToImage} alt=\"thumbnail\" />\n          </a>\n        </div>\n      )}\n      <div className=\"contents\">\n        <h2>\n          <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n            {title}\n          </a>\n        </h2>\n        <p>{description}</p>\n      </div>\n    </NewsItemBlock>\n  );\n};\n\nNewsItem.propTypes = {\n  article: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    url: PropTypes.string,\n    urlToImage: PropTypes.string,\n  }),\n};\n\nNewsItem.defaultProps = {\n  article: null,\n};\n\nexport default NewsItem;\n","import { useState, useEffect } from 'react';\n\nconst usePromise = (promiseCreator, deps) => {\n  const [loading, setLoading] = useState(false);\n  const [resolved, setResolved] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const process = async () => {\n      setLoading(true);\n      try {\n        const promiseResolved = await promiseCreator();\n        setResolved(promiseResolved);\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    };\n    process();\n  }, deps);\n\n  return [loading, resolved, error];\n};\n\nexport default usePromise;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport NewsItem from 'components/NewsItem';\nimport axios from 'axios';\nimport usePromise from 'lib/usePromise';\n\nconst NewsListBlock = styled.div`\n  box-sizing: border-box;\n  padding-bottom: 3rem;\n  width: 768px;\n  margin: 0 auto;\n  margin-top: 2rem;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    padding-left: 1rem;\n    padding-right: 1rem;\n  }\n`;\n\nconst NewsList = ({ category, country }) => {\n  const [loading, response, error] = usePromise(() => {\n    const query = category === 'all' ? '' : `&category=${category}`;\n    return axios.get(\n      `https://news-api-hseoy.herokuapp.com/news?country=${country}${query}`,\n    );\n  }, [category, country]);\n\n  if (loading) {\n    return <NewsListBlock>Loading ...</NewsListBlock>;\n  }\n\n  if (!response) {\n    return null;\n  }\n\n  if (error) {\n    return <NewsListBlock>ERROR!</NewsListBlock>;\n  }\n\n  const { articles } = response.data;\n\n  if (articles.length === 0) {\n    return <NewsListBlock>There are no article</NewsListBlock>;\n  }\n\n  return (\n    <NewsListBlock>\n      {articles.map(article => (\n        <NewsItem key={article.url} article={article} />\n      ))}\n    </NewsListBlock>\n  );\n};\n\nNewsList.propTypes = {\n  category: PropTypes.string,\n  country: PropTypes.string.isRequired,\n};\n\nNewsList.defaultProps = {\n  category: 'all',\n};\n\nexport default NewsList;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport Countries from 'components/Countries';\nimport Categories from 'components/Categories';\nimport NewsList from 'components/NewsList';\n\nconst NewsPage = ({ match }) => {\n  const [country, setCountry] = useState('kr');\n  const onSelect = useCallback(\n    selectedCountry => setCountry(selectedCountry),\n    [],\n  );\n  const category = match.params.category || 'all';\n\n  return (\n    <>\n      <Countries country={country} onSelect={onSelect} />\n      <Categories />\n      <NewsList category={category} country={country} />\n    </>\n  );\n};\n\nNewsPage.propTypes = {\n  match: PropTypes.oneOfType([PropTypes.object]),\n};\n\nNewsPage.defaultProps = {\n  match: null,\n};\n\nexport default NewsPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport NewsPage from 'pages/NewsPage';\n\nconst App = () => {\n  return <Route path=\"/:category?\" component={NewsPage} />;\n};\n\nexport default App;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nconst resources = {\n  en: {\n    // English\n    translation: {\n      all: 'ALL',\n      business: 'BUSINESS',\n      entertainment: 'ENTERTAINMENT',\n      health: 'HEALTH',\n      science: 'SCIENCE',\n      sports: 'SPORTS',\n      technology: 'TECH',\n    },\n  },\n  ko: {\n    // Korean\n    translation: {\n      all: '전체',\n      business: '비즈니스',\n      entertainment: '엔터테인먼트',\n      health: '건강',\n      science: '과학',\n      sports: '스포츠',\n      technology: '기술',\n    },\n  },\n};\n\ni18n.use(initReactI18next).init({\n  resources,\n  lng: 'ko',\n});\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'assets/fonts/fonts.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport './i18n';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// reportWebVitals();\n"],"sourceRoot":""}